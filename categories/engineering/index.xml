<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>engineering on Data Scientist Hiroki&#39;s Blog</title>
    <link>https://dshiroki.com/categories/engineering/</link>
    <description>Recent content in engineering on Data Scientist Hiroki&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 27 Dec 2023 23:50:43 +0900</lastBuildDate><atom:link href="https://dshiroki.com/categories/engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1自由度振動運動方程式の状態空間表現(続)</title>
      <link>https://dshiroki.com/engineering/20231227/</link>
      <pubDate>Wed, 27 Dec 2023 23:50:43 +0900</pubDate>
      
      <guid>https://dshiroki.com/engineering/20231227/</guid>
      <description>1自由度振動運動方程式 こんにちは、データサイエンティストひろき🐶です。
前回こちらのブログで紹介した1自由度振動運動方程式を解くためのMatlabコード
もう少し変形して、このような、入力と出力の形にして、解いてみたいと思います。
 まずこちらの1自由度振動モデル。
普通に数式で表すと下記のように運動方程式で書くことができます。
$$\begin{align*} m\ddot{x}+c\dot{x}+kx&amp;amp;=f \
\end{align*}$$
ここで、
$$\begin{align*} f=c\dot{y}+ky&amp;amp; \
\end{align*}$$
です。
こちらのモデルを解くMatlabコードは、前回のコードを少し変更して、下記のようになります。
% パラメータの定義 m = 1; % 質点 [kg] ※適切な値を設定してください k = 1; % バネのばね定数 [N/m] ※適切な値を設定してください c = 1; % ダンパーの減衰係数 [N.s/m] ※適切な値を設定してください % 微分方程式の定義 A = [0 1; -k/m -c/m]; B = [0; 1/m]; C = [1 0]; D = 0; % 状態空間モデルの作成 sys = ss(A, B, C, D); % 応答のシミュレーション t = linspace(0, 50, 1000); % シミュレーション時間 [s] %外力fをシステムに入力 Y=1; w0=sqrt(k/m); f = c*Y*w0*cos(w0*t)+k*Y * sin(w0*t); % 外力の時系列 y = lsim(sys, f, t); % 結果のプロット figure; plot(t, y); xlabel(&amp;#39;Time [s]&amp;#39;); ylabel(&amp;#39;Displacement [m]&amp;#39;); title(&amp;#39;Response of the physical model&amp;#39;); grid on; 実行すると、下記のようなグラフが得られたのではないでしょうか。  このようにM K Cのシステムにfという入力を与えた時の出力xを求めることが簡単にかつ、システマチックにできるのが、現代制御の魅力です。</description>
    </item>
    
    <item>
      <title>1自由度振動運動方程式の状態空間表現</title>
      <link>https://dshiroki.com/engineering/20231031/</link>
      <pubDate>Tue, 31 Oct 2023 21:03:29 +0900</pubDate>
      
      <guid>https://dshiroki.com/engineering/20231031/</guid>
      <description>1自由度振動運動方程式 こんにちは、データサイエンティストひろき🐶です。
前回こちらのブログで紹介した物理モデルのMatlabコード
実は、状態空間表現というとてもオシャレな解き方をしています。
今回はその状態空間表現について、少し深くみていきたいと思います。
そこで今回は、
状態空間表現とは 1自由度振動モデルを状態空間表現で表すメリット   を紹介します。  まずこちらの1自由度振動モデル。
普通に数式で表すと下記のように運動方程式で書くことができます。
$$\begin{align*} m\ddot{x}+c\dot{x}+kx&amp;amp;=f \
\end{align*}$$
でも前回紹介したMatlabコードでは、
% 微分方程式の定義 A = [0 1; -k/m -c/m]; B = [0; 1/m]; C = [1 0]; D = 0; % 状態空間モデルの作成 sys = ss(A, B, C, D); となっており、何やら様子が違います。
これは状態空間表現といって、非常にオシャレな、有意義な表現方法で
運動方程式を変形して、解いてます。
実は、
$$\begin{align*} m\ddot{x}+c\dot{x}+kx&amp;amp;=f \
\end{align*}$$
この方程式を
$$\begin{pmatrix} \dot{x} \\
\ddot{x} \\
\end{pmatrix} \begin{align*} &amp;amp;= \end{align*} \begin{pmatrix} 0 &amp;amp; 1 \\
-k/m &amp;amp; -c/m \\</description>
    </item>
    
    <item>
      <title>ChatGPT x 手書きの物理モデリングをプログラミング</title>
      <link>https://dshiroki.com/engineering/20231029/</link>
      <pubDate>Sun, 29 Oct 2023 17:04:46 +0900</pubDate>
      
      <guid>https://dshiroki.com/engineering/20231029/</guid>
      <description>ChatGPTを使って物理モデリングをプログラミング 理系女子必見！学習の幅が広がる！とても便利なChatGPTの使い方！
こんにちは、データサイエンティストひろき🐶です。 最近ChatGPTに目が備わったと話題ですね！
例えば下記Youtubeでも紹介されています。
  早速応用してみたい！
例えば、工学系の大学1年生ではじめに習う物理モデルといっても過言ではない、代表的なモデルは下記、1自由度振動モデルではないでしょうか。
そんな物理モデルを自由に描いて、それを数値計算出来たらいいな。
そんな夢を実現してくれるのが、ChatGPTです！
そこで今回は、
ChatGPTを使って手書きの1自由度振動モデルをプログラミングする方法   を紹介します。 物理モデルとして、下記1自由度振動モデルを考えます。  まずChatGPTに上記モデルのスクショをペースト。
そして、「この物理モデルを解くMatlabコードを教えて〜」
と入力してみてください。
そうすると、下記コードが返ってきます。
% パラメータの定義 m = 1; % 質点 [kg] ※適切な値を設定してください k = 1; % バネのばね定数 [N/m] ※適切な値を設定してください c = 1; % ダンパーの減衰係数 [N.s/m] ※適切な値を設定してください f = 1; % 外力 [N] ※適切な値や関数を設定してください % 微分方程式の定義 A = [0 1; -k/m -c/m]; B = [0; 1/m]; C = [1 0]; D = 0; % 状態空間モデルの作成 sys = ss(A, B, C, D); % 応答のシミュレーション t = linspace(0, 10, 1000); % シミュレーション時間 [s] u = f * ones(size(t)); % 外力の時系列 y = lsim(sys, u, t); % 結果のプロット figure; plot(t, y); xlabel(&amp;#39;Time [s]&amp;#39;); ylabel(&amp;#39;Displacement [m]&amp;#39;); title(&amp;#39;Response of the physical model&amp;#39;); grid on;  本当に動くのか？？？</description>
    </item>
    
  </channel>
</rss>
